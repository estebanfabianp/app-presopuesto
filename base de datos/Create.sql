-- MySQL Script generated by MySQL Workbench
-- Mon Sep  1 15:32:04 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`producto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`producto` (
  `id_producto` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único del producto',
  `nombre` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Nombre del producto',
  `monto_maximo` DECIMAL(10,2) NULL DEFAULT NULL COMMENT 'Monto máximo permitido',
  `monto_minimo` DECIMAL(10,2) NULL DEFAULT NULL COMMENT 'Monto mínimo permitido',
  `porcentaje_interes` DECIMAL(5,2) NULL DEFAULT NULL COMMENT 'Porcentaje de interés aplicado',
  `id_columna_producto` INT NULL DEFAULT NULL COMMENT 'Columna adicional de producto (uso específico)',
  `columna_producto` VARCHAR(45) NOT NULL COMMENT 'Columna clave adicional del producto',
  PRIMARY KEY (`id_producto`, `columna_producto`)
) ENGINE = InnoDB
COMMENT = 'Tabla que almacena los productos financieros';


-- -----------------------------------------------------
-- Table `mydb`.`persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`persona` ;

CREATE TABLE IF NOT EXISTS `mydb`.`persona` (
  `id_persona` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único de la persona',
  `nombre` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Nombre de la persona',
  PRIMARY KEY (`id_persona`)
) ENGINE = InnoDB
COMMENT = 'Tabla que almacena las personas';


-- -----------------------------------------------------
-- Table `mydb`.`producto_persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`producto_persona` ;

CREATE TABLE IF NOT EXISTS `mydb`.`producto_persona` (
  `id_producto` INT NOT NULL COMMENT 'ID del producto relacionado',
  `columna_producto` VARCHAR(45) NOT NULL COMMENT 'Columna clave adicional del producto relacionado',
  `id_persona` INT NOT NULL COMMENT 'ID de la persona relacionada',
  PRIMARY KEY (`id_producto`, `columna_producto`, `id_persona`),
  INDEX `idx_persona` (`id_persona` ASC) VISIBLE,
  INDEX `idx_producto` (`id_producto` ASC, `columna_producto` ASC) VISIBLE,
  CONSTRAINT `fk_producto_persona_producto`
    FOREIGN KEY (`id_producto`, `columna_producto`)
    REFERENCES `mydb`.`producto` (`id_producto`, `columna_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_persona_persona`
    FOREIGN KEY (`id_persona`)
    REFERENCES `mydb`.`persona` (`id_persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Relación entre productos y personas';


-- -----------------------------------------------------
-- Table `mydb`.`categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`categoria` ;

CREATE TABLE IF NOT EXISTS `mydb`.`categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único de la categoría',
  `nombre` VARCHAR(255) NOT NULL COMMENT 'Nombre de la categoría',
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB
COMMENT = 'Tabla de categorías de movimientos';


-- -----------------------------------------------------
-- Table `mydb`.`beneficiario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`beneficiario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`beneficiario` (
  `id_beneficiario` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único del beneficiario',
  `nombre` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Nombre del beneficiario',
  PRIMARY KEY (`id_beneficiario`))
ENGINE = InnoDB
COMMENT = 'Tabla que almacena los beneficiarios';


-- -----------------------------------------------------
-- Table `mydb`.`movimiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`movimiento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`movimiento` (
  `id_movimiento` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único del movimiento',
  `codigo` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Código del movimiento',
  `beneficiario` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Nombre del beneficiario',
  `categoria` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Nombre de la categoría',
  `monto` DECIMAL(10,2) NULL DEFAULT NULL COMMENT 'Monto del movimiento',
  `tipo` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Tipo de movimiento',
  `id_producto` INT NOT NULL COMMENT 'ID del producto relacionado',
  `columna_producto` VARCHAR(45) NOT NULL COMMENT 'Columna clave adicional del producto relacionado',
  `id_persona` INT NOT NULL COMMENT 'ID de la persona relacionada',
  `id_categoria` INT NOT NULL COMMENT 'ID de la categoría relacionada',
  `cuotas` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Cantidad de cuotas',
  `estado` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Estado del movimiento',
  `id_beneficiario` INT NOT NULL,
  PRIMARY KEY (`id_movimiento`, `id_producto`, `columna_producto`, `id_persona`, `id_categoria`, `id_beneficiario`),
  INDEX `idx_producto_persona` (`id_producto` ASC, `columna_producto` ASC, `id_persona` ASC) VISIBLE,
  INDEX `idx_categoria` (`id_categoria` ASC) VISIBLE,
  INDEX `idx_beneficiario` (`id_beneficiario` ASC) VISIBLE,
  CONSTRAINT `fk_movimiento_producto_persona`
    FOREIGN KEY (`id_producto`, `columna_producto`, `id_persona`)
    REFERENCES `mydb`.`producto_persona` (`id_producto`, `columna_producto`, `id_persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movimiento_categoria`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `mydb`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movimiento_beneficiario`
    FOREIGN KEY (`id_beneficiario`)
    REFERENCES `mydb`.`beneficiario` (`id_beneficiario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabla que almacena los movimientos financieros';


-- -----------------------------------------------------
-- Table `mydb`.`beneficiario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`beneficiario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`beneficiario` (
  `idbeneficiario` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único del beneficiario',
  `nombre` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Nombre del beneficiario',
  PRIMARY KEY (`idbeneficiario`))
ENGINE = InnoDB
COMMENT = 'Tabla que almacena los beneficiarios';


-- -----------------------------------------------------
-- Table `mydb`.`transaccion_programada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`transaccion_programada` ;

CREATE TABLE IF NOT EXISTS `mydb`.`transaccion_programada` (
  `id_transaccion` INT NULL DEFAULT NULL AUTO_INCREMENT COMMENT 'Identificador único de la transacción programada',
  `fecha` DATE NOT NULL COMMENT 'Fecha de la transacción programada',
  `categoria` VARCHAR(100) NOT NULL COMMENT 'Categoría de la transacción',
  `etiqueta` VARCHAR(100) NULL DEFAULT NULL COMMENT 'Etiqueta asociada a la transacción',
  `tipo` VARCHAR(50) NOT NULL COMMENT 'Tipo de transacción',
  `monto` DECIMAL(10,2) NOT NULL COMMENT 'Monto de la transacción',
  `frecuencia` VARCHAR(50) NOT NULL DEFAULT 0 COMMENT 'Frecuencia de la transacción',
  `repeticion` INT NOT NULL COMMENT 'Cantidad de repeticiones',
  `id_categoria` INT NOT NULL,
  `id_beneficiario` INT NOT NULL,
  PRIMARY KEY (`id_transaccion`, `id_categoria`, `id_beneficiario`),
  INDEX `idx_categoria` (`id_categoria` ASC) VISIBLE,
  INDEX `idx_beneficiario` (`id_beneficiario` ASC) VISIBLE,
  CONSTRAINT `fk_transaccion_programada_categoria`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `mydb`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaccion_programada_beneficiario`
    FOREIGN KEY (`id_beneficiario`)
    REFERENCES `mydb`.`beneficiario` (`id_beneficiario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabla que almacena las transacciones programadas';


-- -----------------------------------------------------
-- Table `mydb`.`prestamo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`prestamo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`prestamo` (
  `id_prestamo` INT NULL DEFAULT NULL AUTO_INCREMENT COMMENT 'Identificador único del préstamo',
  `fecha` DATE NOT NULL COMMENT 'Fecha de inicio del préstamo',
  `estado` VARCHAR(50) NOT NULL COMMENT 'Estado actual del préstamo',
  `moneda` VARCHAR(10) NOT NULL COMMENT 'Moneda del préstamo',
  `saldo_inicial` DECIMAL(15,2) NOT NULL COMMENT 'Saldo inicial del préstamo',
  `limite_credito` DECIMAL(15,2) NOT NULL COMMENT 'Límite de crédito del préstamo',
  `id_persona` INT NOT NULL,
  PRIMARY KEY (`id_prestamo`, `id_persona`),
  INDEX `idx_persona` (`id_persona` ASC) VISIBLE,
  CONSTRAINT `fk_prestamo_persona`
    FOREIGN KEY (`id_persona`)
    REFERENCES `mydb`.`persona` (`id_persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabla que almacena los préstamos';


-- -----------------------------------------------------
-- Table `mydb`.`etiqueta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`etiqueta` ;

CREATE TABLE IF NOT EXISTS `mydb`.`etiqueta` (
  `id_etiqueta` INT NOT NULL COMMENT 'Identificador único de la etiqueta',
  `nombre` VARCHAR(45) NULL COMMENT 'Nombre de la etiqueta',
  `id_transaccion` INT NOT NULL COMMENT 'ID de la transacción programada asociada',
  `id_categoria` INT NOT NULL COMMENT 'ID de la categoría de la transacción programada asociada',
  PRIMARY KEY (`id_etiqueta`, `id_transaccion`, `id_categoria`),
  INDEX `idx_transaccion_categoria` (`id_transaccion` ASC, `id_categoria` ASC) VISIBLE,
  CONSTRAINT `fk_etiqueta_transaccion_programada`
    FOREIGN KEY (`id_transaccion`, `id_categoria`)
    REFERENCES `mydb`.`transaccion_programada` (`id_transaccion`, `id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB
COMMENT = 'Tabla que almacena las etiquetas asociadas a transacciones programadas';


-- -----------------------------------------------------
-- Table `mydb`.`activo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`activo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`activo` (
  `id_activo` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único del activo',
  `nombre_activo` VARCHAR(45) NOT NULL COMMENT 'Nombre del activo',
  `valor` DECIMAL(15,2) NOT NULL COMMENT 'Valor del activo',
  `depreciacion` DECIMAL(15,2) DEFAULT NULL COMMENT 'Depreciación anual del activo',
  `id_persona` INT NOT NULL COMMENT 'ID de la persona propietaria del activo',
  `fecha_creacion` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha de creación del registro',
  PRIMARY KEY (`id_activo`),
  INDEX `idx_persona` (`id_persona` ASC),
  CONSTRAINT `fk_activo_persona`
    FOREIGN KEY (`id_persona`)
    REFERENCES `mydb`.`persona` (`id_persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB
COMMENT = 'Tabla que almacena los activos de las personas';


-- -----------------------------------------------------
-- Table `mydb`.`presupuesto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`presupuesto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`presupuesto` (
  `id_presupuesto` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único del presupuesto',
  `nombre` VARCHAR(100) NOT NULL COMMENT 'Nombre del presupuesto',
  `descripcion` TEXT DEFAULT NULL COMMENT 'Descripción del presupuesto',
  `monto_total` DECIMAL(15,2) NOT NULL COMMENT 'Monto total asignado al presupuesto',
  `fecha_inicio` DATE NOT NULL COMMENT 'Fecha de inicio del presupuesto',
  `fecha_fin` DATE NOT NULL COMMENT 'Fecha de fin del presupuesto',
  `id_persona` INT NOT NULL COMMENT 'Persona asociada al presupuesto',
  PRIMARY KEY (`id_presupuesto`),
  INDEX `idx_persona` (`id_persona` ASC),
  CONSTRAINT `fk_presupuesto_persona`
    FOREIGN KEY (`id_persona`)
    REFERENCES `mydb`.`persona` (`id_persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB
COMMENT = 'Tabla que almacena los presupuestos definidos por los usuarios';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
